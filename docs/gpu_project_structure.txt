k8s-gpu-management/
├── README.md                                    # 프로젝트 메인 문서
├── CONTRIBUTING.md                              # 기여 가이드
├── LICENSE                                      # MIT 라이선스
├── docker-compose.yml                           # 로컬 개발 환경
├── Dockerfile                                   # 컨테이너 이미지
├── pom.xml                                      # Maven 설정
├── .gitignore                                   # Git 무시 파일
├── .env.example                                 # 환경변수 템플릿
│
├── docs/                                        # 프로젝트 문서
│   ├── installation.md                          # 설치 가이드
│   ├── api.md                                   # API 문서
│   ├── configuration.md                         # 설정 가이드
│   ├── troubleshooting.md                       # 문제 해결 가이드
│   ├── integration-guide.md                     # 통합 가이드
│   ├── architecture.md                          # 아키텍처 문서
│   ├── images/                                  # 문서용 이미지
│   │   ├── dashboard-main.png
│   │   ├── dashboard-gpu.png
│   │   └── dashboard-cost.png
│   └── uml/                                     # UML 다이어그램
│       ├── k8s_monitor_class_diagram.mermaid
│       ├── k8s_monitor_database_erd.mermaid
│       ├── k8s_monitor_deployment.mermaid
│       ├── k8s_monitor_sequence.mermaid
│       ├── k8s_monitor_simple_api.mermaid
│       ├── k8s_monitor_simple_state.mermaid
│       ├── k8s_monitor_state_diagram.mermaid
│       └── k8s_monitor_system_architecture.mermaid
│
├── scripts/                                     # 유틸리티 스크립트
│   ├── init-database.sh                         # DB 초기화
│   ├── setup-dev-env.sh                         # 개발 환경 설정
│   ├── deploy-k8s.sh                           # K8s 배포
│   ├── backup-db.sh                            # DB 백업
│   └── monitoring-setup.sh                     # 모니터링 설정
│
├── k8s/                                         # Kubernetes 매니페스트
│   ├── namespace.yaml                           # 네임스페이스
│   ├── configmap.yaml                           # 설정 맵
│   ├── secret.yaml                              # 시크릿
│   ├── deployment.yaml                          # 애플리케이션 배포
│   ├── service.yaml                             # 서비스
│   ├── ingress.yaml                             # 인그레스
│   ├── rbac.yaml                                # RBAC 설정
│   ├── serviceaccount.yaml                      # 서비스 계정
│   ├── daemonset-gpu-collector.yaml             # GPU 메트릭 수집기
│   ├── oracle-db.yaml                           # Oracle DB 배포
│   ├── redis.yaml                               # Redis 캐시
│   └── monitoring/                              # 모니터링 설정
│       ├── servicemonitor.yaml                  # Prometheus ServiceMonitor
│       ├── prometheusrule.yaml                  # 알람 규칙
│       └── grafana-dashboard.json               # Grafana 대시보드
│
├── database/                                    # 데이터베이스 관련
│   ├── oracle/                                  # Oracle 스키마
│   │   ├── V1__Create_Base_Tables.sql           # 기본 테이블
│   │   ├── V2__Create_GPU_Tables.sql            # GPU 관리 테이블
│   │   ├── V3__Create_Indexes.sql               # 인덱스 생성
│   │   ├── V4__Insert_Sample_Data.sql           # 샘플 데이터
│   │   └── V5__Create_Views_And_Procedures.sql  # 뷰 및 프로시저
│   ├── h2/                                      # H2 개발용
│   │   └── schema.sql                           # 개발용 스키마
│   └── migration/                               # 마이그레이션 스크립트
│       ├── migrate-from-h2.sql                  # H2에서 Oracle로
│       └── rollback-scripts.sql                 # 롤백 스크립트
│
├── src/
│   ├── main/
│   │   ├── java/com/k8s/monitor/
│   │   │   ├── K8sResourceMonitorApplication.java        # 메인 애플리케이션
│   │   │   │
│   │   │   ├── config/                                   # 설정 클래스
│   │   │   │   ├── KubernetesConfig.java                 # K8s 클라이언트 설정
│   │   │   │   ├── DatabaseConfig.java                  # DB 설정
│   │   │   │   ├── CacheConfig.java                     # 캐시 설정
│   │   │   │   ├── SchedulingConfig.java                # 스케줄링 설정
│   │   │   │   └── SecurityConfig.java                  # 보안 설정
│   │   │   │
│   │   │   ├── controller/                               # REST 컨트롤러
│   │   │   │   ├── ResourceController.java              # 기존 K8s 리소스 API
│   │   │   │   └── gpu/                                  # GPU 관리 API
│   │   │   │       ├── GpuManagementController.java     # GPU 메인 API
│   │   │   │       ├── GpuDeviceController.java         # GPU 장비 API
│   │   │   │       ├── MigManagementController.java     # MIG 관리 API
│   │   │   │       ├── GpuAllocationController.java     # GPU 할당 API
│   │   │   │       ├── GpuMetricsController.java        # GPU 메트릭 API
│   │   │   │       └── GpuCostController.java           # GPU 비용 API
│   │   │   │
│   │   │   ├── service/                                  # 서비스 레이어
│   │   │   │   ├── KubernetesService.java               # 기존 K8s 서비스
│   │   │   │   ├── ResourceAnalysisService.java         # 기존 분석 서비스
│   │   │   │   ├── MetricsCollectionService.java        # 기존 메트릭 수집
│   │   │   │   ├── ResourceMetricsService.java          # 기존 메트릭 서비스
│   │   │   │   └── gpu/                                  # GPU 서비스
│   │   │   │       ├── GpuDeviceService.java            # GPU 장비 관리
│   │   │   │       ├── MigManagementService.java        # MIG 관리
│   │   │   │       ├── GpuAllocationService.java        # GPU 할당 관리
│   │   │   │       ├── GpuMetricsCollectionService.java # GPU 메트릭 수집
│   │   │   │       ├── GpuCostAnalysisService.java      # 비용 분석
│   │   │   │       ├── GpuOptimizationService.java      # 최적화 서비스
│   │   │   │       └── GpuForecastService.java          # 예측 분석
│   │   │   │
│   │   │   ├── repository/                               # 데이터 액세스
│   │   │   │   ├── MetricsRepository.java               # 기존 메트릭 리포지토리
│   │   │   │   └── gpu/                                  # GPU 리포지토리
│   │   │   │       ├── GpuModelRepository.java          # GPU 모델
│   │   │   │       ├── GpuNodeRepository.java           # GPU 노드
│   │   │   │       ├── GpuDeviceRepository.java         # GPU 장비
│   │   │   │       ├── MigProfileRepository.java        # MIG 프로필
│   │   │   │       ├── MigInstanceRepository.java       # MIG 인스턴스
│   │   │   │       ├── GpuAllocationRepository.java     # GPU 할당
│   │   │   │       └── GpuUsageMetricsRepository.java   # GPU 메트릭
│   │   │   │
│   │   │   ├── entity/                                   # JPA 엔티티
│   │   │   │   ├── ResourceMetrics.java                 # 기존 메트릭 엔티티
│   │   │   │   └── gpu/                                  # GPU 엔티티
│   │   │   │       ├── GpuModel.java                    # GPU 모델
│   │   │   │       ├── GpuNode.java                     # GPU 노드
│   │   │   │       ├── GpuDevice.java                   # GPU 장비
│   │   │   │       ├── MigProfile.java                  # MIG 프로필
│   │   │   │       ├── MigInstance.java                 # MIG 인스턴스
│   │   │   │       ├── GpuAllocation.java               # GPU 할당
│   │   │   │       └── GpuUsageMetrics.java             # GPU 메트릭
│   │   │   │
│   │   │   ├── dto/                                      # 데이터 전송 객체
│   │   │   │   ├── NodeResourceInfo.java                # 기존 노드 DTO
│   │   │   │   ├── PodResourceInfo.java                 # 기존 Pod DTO
│   │   │   │   ├── ResourceUsageResponse.java           # 기존 응답 DTO
│   │   │   │   └── gpu/                                  # GPU DTO
│   │   │   │       ├── GpuDeviceInfo.java               # GPU 장비 정보
│   │   │   │       ├── GpuDeviceRegistrationRequest.java # GPU 등록 요청
│   │   │   │       ├── GpuDeviceStatistics.java         # GPU 통계
│   │   │   │       ├── MigInstanceInfo.java             # MIG 인스턴스 정보
│   │   │   │       ├── MigProfileInfo.java              # MIG 프로필 정보
│   │   │   │       ├── GpuAllocationRequest.java        # GPU 할당 요청
│   │   │   │       ├── GpuAllocationInfo.java           # GPU 할당 정보
│   │   │   │       ├── GpuUsageMetricInfo.java          # GPU 메트릭 정보
│   │   │   │       ├── GpuClusterOverview.java          # 클러스터 개요
│   │   │   │       ├── GpuCostAnalysis.java             # 비용 분석
│   │   │   │       ├── CostOptimizationSuggestion.java  # 최적화 제안
│   │   │   │       ├── GpuBenchmarkInfo.java            # 벤치마크 정보
│   │   │   │       ├── GpuAlertInfo.java                # 알람 정보
│   │   │   │       ├── GpuWorkloadProfile.java          # 워크로드 프로필
│   │   │   │       └── GpuForecastAnalysis.java         # 예측 분석
│   │   │   │
│   │   │   ├── exception/                                # 예외 처리
│   │   │   │   ├── GlobalExceptionHandler.java          # 글로벌 예외 핸들러
│   │   │   │   ├── ResourceNotFoundException.java       # 리소스 없음 예외
│   │   │   │   ├── GpuNotAvailableException.java        # GPU 사용 불가 예외
│   │   │   │   ├── MigNotSupportedException.java        # MIG 미지원 예외
│   │   │   │   └── AllocationFailedException.java       # 할당 실패 예외
│   │   │   │
│   │   │   ├── util/                                     # 유틸리티 클래스
│   │   │   │   ├── GpuModelUtils.java                   # GPU 모델 유틸
│   │   │   │   ├── MigProfileUtils.java                 # MIG 프로필 유틸
│   │   │   │   ├── ResourceCalculator.java              # 리소스 계산
│   │   │   │   ├── CostCalculator.java                  # 비용 계산
│   │   │   │   └── MetricsAggregator.java               # 메트릭 집계
│   │   │   │
│   │   │   ├── validation/                               # 유효성 검증
│   │   │   │   ├── GpuDeviceValidator.java              # GPU 장비 검증
│   │   │   │   ├── AllocationRequestValidator.java      # 할당 요청 검증
│   │   │   │   └── MigConfigValidator.java              # MIG 설정 검증
│   │   │   │
│   │   │   └── aspect/                                   # AOP 관점
│   │   │       ├── LoggingAspect.java                   # 로깅 관점
│   │   │       ├── PerformanceAspect.java               # 성능 측정
│   │   │       └── SecurityAspect.java                  # 보안 관점
│   │   │
│   │   └── resources/
│   │       ├── application.yml                          # 기본 설정
│   │       ├── application-development.yml              # 개발 환경 설정
│   │       ├── application-production.yml               # 운영 환경 설정
│   │       ├── application-gpu.yml                      # GPU 관리 설정
│   │       ├── application-test.yml                     # 테스트 환경 설정
│   │       ├── logback-spring.xml                       # 로깅 설정
│   │       ├── messages.properties                      # 메시지 리소스
│   │       ├── banner.txt                               # 애플리케이션 배너
│   │       │
│   │       ├── static/                                  # 정적 리소스
│   │       │   ├── index.html                           # 메인 대시보드
│   │       │   ├── css/                                 # 스타일시트
│   │       │   │   ├── main.css                         # 메인 스타일
│   │       │   │   ├── gpu-dashboard.css                # GPU 대시보드 스타일
│   │       │   │   └── responsive.css                   # 반응형 스타일
│   │       │   ├── js/                                  # JavaScript
│   │       │   │   ├── main.js                          # 메인 스크립트
│   │       │   │   ├── gpu-management.js                # GPU 관리 스크립트
│   │       │   │   ├── charts.js                        # 차트 라이브러리
│   │       │   │   └── utils.js                         # 유틸리티 함수
│   │       │   ├── images/                              # 이미지 리소스
│   │       │   │   ├── logo.png                         # 로고
│   │       │   │   ├── gpu-icons/                       # GPU 아이콘
│   │       │   │   └── status-icons/                    # 상태 아이콘
│   │       │   └── fonts/                               # 폰트 파일
│   │       │
│   │       └── templates/                               # Thymeleaf 템플릿 (선택적)
│   │           ├── dashboard.html                       # 대시보드 템플릿
│   │           ├── gpu-details.html                     # GPU 상세 템플릿
│   │           └── error.html                           # 에러 페이지
│   │
│   └── test/
│       ├── java/com/k8s/monitor/
│       │   ├── K8sResourceMonitorApplicationTests.java  # 메인 테스트
│       │   │
│       │   ├── controller/                              # 컨트롤러 테스트
│       │   │   ├── ResourceControllerTest.java          # 기존 컨트롤러 테스트
│       │   │   └── gpu/                                 # GPU 컨트롤러 테스트
│       │   │       ├── GpuManagementControllerTest.java
│       │   │       ├── GpuDeviceControllerTest.java
│       │   │       ├── MigManagementControllerTest.java
│       │   │       └── GpuAllocationControllerTest.java
│       │   │
│       │   ├── service/                                 # 서비스 테스트
│       │   │   ├── KubernetesServiceTest.java           # 기존 서비스 테스트
│       │   │   └── gpu/                                 # GPU 서비스 테스트
│       │   │       ├── GpuDeviceServiceTest.java
│       │   │       ├── MigManagementServiceTest.java
│       │   │       ├── GpuAllocationServiceTest.java
│       │   │       └── GpuMetricsCollectionServiceTest.java
│       │   │
│       │   ├── repository/                              # 리포지토리 테스트
│       │   │   └── gpu/                                 # GPU 리포지토리 테스트
│       │   │       ├── GpuDeviceRepositoryTest.java
│       │   │       ├── MigInstanceRepositoryTest.java
│       │   │       └── GpuAllocationRepositoryTest.java
│       │   │
│       │   ├── integration/                             # 통합 테스트
│       │   │   ├── GpuManagementIntegrationTest.java    # GPU 관리 통합 테스트
│       │   │   ├── DatabaseIntegrationTest.java         # DB 통합 테스트
│       │   │   └── K8sIntegrationTest.java              # K8s 통합 테스트
│       │   │
│       │   └── util/                                    # 테스트 유틸리티
│       │       ├── TestDataBuilder.java                 # 테스트 데이터 빌더
│       │       ├── MockGpuDeviceFactory.java            # Mock GPU 팩토리
│       │       └── TestContainerConfig.java             # 테스트컨테이너 설정
│       │
│       └── resources/
│           ├── application-test.yml                     # 테스트 설정
│           ├── test-data/                               # 테스트 데이터
│           │   ├── gpu-models.json                      # GPU 모델 테스트 데이터
│           │   ├── mig-profiles.json                    # MIG 프로필 테스트 데이터
│           │   └── sample-metrics.json                  # 샘플 메트릭 데이터
│           └── sql/                                     # 테스트용 SQL
│               ├── schema-test.sql                      # 테스트 스키마
│               └── test-data.sql                        # 테스트 데이터 삽입
│
├── grafana/                                             # Grafana 설정
│   ├── dashboards/                                      # 대시보드 정의
│   │   ├── gpu-overview.json                           # GPU 개요 대시보드
│   │   ├── gpu-utilization.json                        # GPU 사용률 대시보드
│   │   ├── mig-management.json                          # MIG 관리 대시보드
│   │   ├── cost-analysis.json                          # 비용 분석 대시보드
│   │   └── gpu-alerts.json                             # GPU 알람 대시보드
│   ├── provisioning/                                   # 프로비저닝 설정
│   │   ├── dashboards.yml                              # 대시보드 프로비저닝
│   │   └── datasources.yml                             # 데이터소스 설정
│   └── plugins.txt                                      # 필요한 플러그인 목록
│
├── prometheus/                                          # Prometheus 설정
│   ├── prometheus.yml                                   # Prometheus 설정
│   ├── rules/                                           # 알람 규칙
│   │   ├── gpu-alerts.yml                              # GPU 알람 규칙
│   │   ├── mig-alerts.yml                              # MIG 알람 규칙
│   │   └── cost-alerts.yml                             # 비용 알람 규칙
│   └── targets/                                         # 모니터링 대상
│       └── gpu-targets.yml                             # GPU 모니터링 대상
│
├── nginx/                                               # Nginx 설정 (선택적)
│   ├── nginx.conf                                       # Nginx 메인 설정
│   ├── sites-available/                                # 사이트 설정
│   │   └── gpu-management.conf                         # GPU 관리 사이트
│   └── ssl/                                            # SSL 인증서
│       ├── cert.pem
│       └── key.pem
│
├── tests/                                               # E2E 테스트
│   ├── e2e/                                            # End-to-End 테스트
│   │   ├── gpu-allocation.test.js                      # GPU 할당 E2E 테스트
│   │   ├── mig-management.test.js                      # MIG 관리 E2E 테스트
│   │   └── dashboard.test.js                           # 대시보드 E2E 테스트
│   ├── performance/                                    # 성능 테스트
│   │   ├── load-test.js                                # 부하 테스트
│   │   └── stress-test.js                              # 스트레스 테스트
│   └── security/                                       # 보안 테스트
│       ├── auth-test.js                                # 인증 테스트
│       └── injection-test.js                           # 인젝션 테스트
│
├── tools/                                               # 개발 도구
│   ├── code-generation/                                # 코드 생성
│   │   ├── generate-gpu-entities.sh                    # GPU 엔티티 생성
│   │   └── generate-api-docs.sh                        # API 문서 생성
│   ├── monitoring/                                     # 모니터링 도구
│   │   ├── gpu-health-check.sh                        # GPU 헬스 체크
│   │   └── metrics-validation.py                      # 메트릭 검증
│   └── maintenance/                                    # 유지보수 도구
│       ├── db-backup.sh                               # DB 백업
│       ├── log-rotation.sh                            # 로그 순환
│       └── cleanup-old-metrics.sh                     # 오래된 메트릭 정리
│
└── .github/                                            # GitHub 설정
    ├── workflows/                                       # GitHub Actions
    │   ├── ci.yml                                       # CI 파이프라인
    │   ├── cd.yml                                       # CD 파이프라인
    │   ├── security-scan.yml                           # 보안 스캔
    │   ├── performance-test.yml                        # 성능 테스트
    │   └── release.yml                                  # 릴리즈 워크플로우
    ├── ISSUE_TEMPLATE/                                  # 이슈 템플릿
    │   ├── bug_report.md                               # 버그 리포트
    │   ├── feature_request.md                          # 기능 요청
    │   └── gpu_compatibility.md                        # GPU 호환성 요청
    └── PULL_REQUEST_TEMPLATE.md                        # PR 템플릿